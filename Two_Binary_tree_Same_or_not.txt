Given the roots of two binary trees p and q, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

 

Example 1:


Input: p = [1,2,3], q = [1,2,3]
Output: true

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        Queue<TreeNode> q1 = new LinkedList<>();
        Queue<TreeNode> q2 = new LinkedList<>();

        q1.add(p);
        q2.add(q);

        while(!q1.isEmpty() || !q2.isEmpty()) {
            TreeNode a = q1.poll();
            TreeNode b = q2.poll();

            int a1 = a!=null ?a.val:-1;
            int b1 = b!=null ?b.val:-1;

            if(a1 != b1) return false;

            if(a != null) {
                q1.add(a.left);
                q1.add(a.right);
            }

            if(b != null){
                q2.add(b.left);
                q2.add(b.right);
            }
        }

        if(q1.size() != q2.size())  return false;

        return true;
    }
}